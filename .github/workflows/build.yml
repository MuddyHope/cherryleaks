name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - Unix Makefiles" -S ${{github.workspace}} -B ${{github.workspace}}/cmake-build-debug

    - name: Build Main
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/cmake-build-debug --target hello-world -- -j 9

    - name: Build & Run C_MEM_DMA_TESTS
      run: cmake --build ${{github.workspace}}/cmake-build-debug --target c-mem-dma-test -- -j 9 && ${{github.workspace}}/cmake-build-debug/test/c-mem-dma-test

      
